{"remainingRequest":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/primevue/components/multiselect/MultiSelect.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/primevue/components/multiselect/MultiSelect.vue","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wLW11bHRpc2VsZWN0IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHdpZHRoOiBhdXRvOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoucC1tdWx0aXNlbGVjdCAucC1tdWx0aXNlbGVjdC10cmlnZ2VyIHsKICAgIGJvcmRlci1yaWdodDogbm9uZTsKICAgIGJvcmRlci10b3A6IG5vbmU7CiAgICBib3JkZXItYm90dG9tOiBub25lOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgd2lkdGg6IDEuNWVtOwogICAgaGVpZ2h0OiAxMDAlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IDA7CiAgICB0b3A6IDA7CiAgICBwYWRkaW5nOiAwIC4yNWVtOwp9CgoucC1tdWx0aXNlbGVjdCAucC1tdWx0aXNlbGVjdC10cmlnZ2VyIC5wLW11bHRpc2VsZWN0LXRyaWdnZXItaWNvbiB7CiAgICB0b3A6IDUwJTsKICAgIGxlZnQ6IDUwJTsKICAgIG1hcmdpbi10b3A6IC0uNWVtOwogICAgbWFyZ2luLWxlZnQ6IC0uNWVtOwogICAgcG9zaXRpb246IGFic29sdXRlOwp9CgoucC1tdWx0aXNlbGVjdCAucC1tdWx0aXNlbGVjdC1sYWJlbC1jb250YWluZXIgewogICAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLnAtbXVsdGlzZWxlY3QgLnAtbXVsdGlzZWxlY3QtbGFiZWwgIHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgcGFkZGluZzogLjI1ZW0gMmVtIC4yNWVtIC4yNWVtOwogICAgd2lkdGg6IGF1dG87CiAgICBib3JkZXI6IG5vbmU7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICAgIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5wLW11bHRpc2VsZWN0LWxhYmVsLWVtcHR5IHsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB2aXNpYmlsaXR5OiBoaWRkZW47Cn0KCi5wLW11bHRpc2VsZWN0LnAtZGlzYWJsZWQgLnAtbXVsdGlzZWxlY3QtdHJpZ2dlciwKLnAtbXVsdGlzZWxlY3QucC1kaXNhYmxlZCAucC1tdWx0aXNlbGVjdC1sYWJlbCB7CiAgICBjdXJzb3I6IGF1dG87Cn0KCi5wLW11bHRpc2VsZWN0LXBhbmVsIHsKICAgIHBhZGRpbmc6IDAuMmVtOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbWluLXdpZHRoOiAxMGVtOwogICAgei1pbmRleDogMjsKfQoKLnAtbXVsdGlzZWxlY3QgLnAtbXVsdGlzZWxlY3QtcGFuZWwgewogICAgbWluLXdpZHRoOiAxMDAlOwp9CgoucC1tdWx0aXNlbGVjdC1wYW5lbCAucC1tdWx0aXNlbGVjdC1pdGVtcy13cmFwcGVyIHsKICAgIG92ZXJmbG93OiBhdXRvOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogMC4yZW0gMDsKfQoKLnAtbXVsdGlzZWxlY3QtcGFuZWwgLnAtbXVsdGlzZWxlY3QtbGlzdCB7CiAgICBib3JkZXI6IDAgbm9uZTsKICAgIG1hcmdpbjogMDsKICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKfQoKLnAtbXVsdGlzZWxlY3QtcGFuZWwgLnAtbXVsdGlzZWxlY3QtaXRlbSB7CiAgICBib3JkZXI6IDAgbm9uZTsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgICBtYXJnaW46IDFweCAwOwogICAgcGFkZGluZzogLjEyNWVtIC4yNWVtOwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLnAtbXVsdGlzZWxlY3QtcGFuZWwgLnAtbXVsdGlzZWxlY3QtaXRlbSAucC1jaGVja2JveCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9CgoucC1tdWx0aXNlbGVjdC1wYW5lbCAucC1tdWx0aXNlbGVjdC1pdGVtID4gc3BhbiB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9CgoucC1tdWx0aXNlbGVjdC1oZWFkZXIgewogICAgbWFyZ2luLWJvdHRvbTogMC4zZW07CiAgICBwYWRkaW5nOiAuMjVlbTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHRleHQtYWxpZ246IGxlZnQ7Cn0KCi5wLW11bHRpc2VsZWN0LWhlYWRlciAucC1jaGVja2JveCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgY3Vyc29yOnBvaW50ZXI7Cn0KCi5wLW11bHRpc2VsZWN0LWhlYWRlciAucC1tdWx0aXNlbGVjdC1maWx0ZXItY29udGFpbmVyIHsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICB3aWR0aDogNjUlOwp9CgoucC1tdWx0aXNlbGVjdC1oZWFkZXIgLnAtbXVsdGlzZWxlY3QtZmlsdGVyLWNvbnRhaW5lciAucC1tdWx0aXNlbGVjdC1maWx0ZXItaWNvbiB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IC4yNWVtOwogICAgbGVmdDogLjEyNWVtOwp9CgoucC1tdWx0aXNlbGVjdC1oZWFkZXIgLnAtaW5wdXR0ZXh0IHsKICAgIHBhZGRpbmc6IC4xMjVlbSAuMTI1ZW0gLjEyNWVtIDEuMjVlbTsKICAgIHdpZHRoOiAxMDAlOwp9CgoucC1tdWx0aXNlbGVjdC1oZWFkZXIgLnAtbXVsdGlzZWxlY3QtY2xvc2UgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IC4zNzVlbTsKICAgIHRvcDogLjM3NWVtOwogICAgZGlzcGxheTogYmxvY2s7CiAgICBib3JkZXI6IDAgbm9uZTsKfQoKLnAtbXVsdGlzZWxlY3QtaGVhZGVyIGEucC1tdWx0aXNlbGVjdC1hbGwsCi5wLW11bHRpc2VsZWN0LWhlYWRlciBhLnAtbXVsdGlzZWxlY3Qtbm9uZSB7CiAgICBmbG9hdDpsZWZ0OwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgZGlzcGxheTogYmxvY2s7Cn0KCi5wLW11bHRpc2VsZWN0LWhlYWRlciAucC1tdWx0aXNlbGVjdC1jbG9zZS5wLXN0YXRlLWhvdmVyIHsKICAgIHBhZGRpbmc6MHB4Owp9CgoucC1mbHVpZCAucC1tdWx0aXNlbGVjdCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCg=="},{"version":3,"sources":["MultiSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2XA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MultiSelect.vue","sourceRoot":"node_modules/primevue/components/multiselect","sourcesContent":["<template>\n    <div ref=\"container\" :class=\"containerClass\" @click=\"onClick\">\n        <div class=\"p-hidden-accessible\">\n            <input ref=\"focusInput\" type=\"text\" role=\"listbox\" readonly :disabled=\"disabled\" @focus=\"onFocus\" @blur=\"onBlur\" @keydown=\"onKeyDown\" :tabindex=\"tabindex\"\n                aria-haspopup=\"listbox\" :aria-expanded=\"overlayVisible\" :aria-labelledby=\"ariaLabelledBy\"/>\n        </div>\n        <div class=\"p-multiselect-label-container\">\n            <label :class=\"labelClass\">\n                <slot name=\"value\" :value=\"value\">\n                    {{label}}\n                </slot>\n            </label>\n        </div>\n        <div class=\"p-multiselect-trigger\">\n            <span class=\"p-multiselect-trigger-icon pi pi-chevron-down p-c\"></span>\n        </div>\n        <transition name=\"p-input-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\">\n            <div ref=\"overlay\" class=\"p-multiselect-panel\" v-if=\"overlayVisible\">\n                <div class=\"p-multiselect-header\">\n                    <div class=\"p-checkbox p-component\" @click=\"onToggleAll\" role=\"checkbox\" :aria-checked=\"allSelected\">\n                        <div class=\"p-hidden-accessible\">\n                            <input type=\"checkbox\" readonly @focus=\"onHeaderCheckboxFocus\" @blur=\"onHeaderCheckboxBlur\">\n                        </div>\n                        <div :class=\"['p-checkbox-box p-component', {'p-highlight': allSelected, 'p-focus': headerCheckboxFocused}]\" role=\"checkbox\" :aria-checked=\"allSelected\">\n                            <span :class=\"['p-checkbox-icon p-c', {'pi pi-check': allSelected}]\"></span>\n                        </div>\n                    </div>\n                    <div v-if=\"filter\" class=\"p-multiselect-filter-container\">\n                        <input type=\"text\" v-model=\"filterValue\" class=\"p-multiselect-filter p-component p-inputtext p-component\" :placeholder=\"filterPlaceholder\">\n                        <span class=\"p-multiselect-filter-icon pi pi-search\"></span>\n                    </div>\n                    <button class=\"p-multiselect-close p-link\" @click=\"onCloseClick\" type=\"button\">\n                        <span class=\"p-multiselect-close-icon pi pi-times\" />\n                    </button>\n                </div>\n                <div ref=\"itemsWrapper\" class=\"p-multiselect-items-wrapper\" :style=\"{'max-height': scrollHeight}\">\n                    <ul class=\"p-multiselect-items p-multiselect-list p-component\" role=\"listbox\" aria-multiselectable=\"true\">\n                        <li v-for=\"(option, i) of visibleOptions\" :class=\"['p-multiselect-item', {'p-highlight': isSelected(option), 'p-disabled': isOptionDisabled(option)}]\" role=\"option\" :aria-selected=\"isSelected(option)\"\n                            :aria-label=\"getOptionLabel(option)\" :key=\"getOptionLabel(option)\" @click=\"onOptionSelect($event, option)\" @keydown=\"onOptionKeyDown($event, option)\" :tabindex=\"tabindex||'0'\">\n                            <div class=\"p-checkbox p-component\">\n                                <div :class=\"['p-checkbox-box p-component', {'p-highlight': isSelected(option)}]\">\n                                    <span :class=\"['p-checkbox-icon p-c', {'pi pi-check': isSelected(option)}]\"></span>\n                                </div>\n                            </div>\n                            <slot name=\"option\" :option=\"option\" :index=\"i\">\n                                <span>{{getOptionLabel(option)}}</span>\n                            </slot>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport ObjectUtils from '../utils/ObjectUtils';\nimport DomHandler from '../utils/DomHandler';\n\nexport default {\n    props: {\n        value: null,\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n\t\tscrollHeight: {\n\t\t\ttype: String,\n\t\t\tdefault: '200px'\n\t\t},\n\t\tplaceholder: String,\n\t\tdisabled: Boolean,\n\t\tfilter: Boolean,\n\t\ttabindex: String,\n        dataKey: null,\n        filterPlaceholder: String,\n        ariaLabelledBy: null\n    },\n    data() {\n        return {\n            focused: false,\n            headerCheckboxFocused: false,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    outsideClickListener: null,\n    beforeDestroy() {\n        this.unbindOutsideClickListener();\n    },\n    updated() {\n        if (this.overlayVisible && this.filterValue) {\n            this.alignOverlay();\n        }\n    },\n    methods: {\n        getOptionLabel(option) {\n            return ObjectUtils.resolveFieldData(option, this.optionLabel);\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isSelected(option) {\n            let selected = false;\n            let optionValue = this.getOptionValue(option);\n\n            if (this.value) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.equalityKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n\n            return selected;\n        },\n        show() {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.overlayVisible = false;\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur() {\n            this.focused = false;\n        },\n        onHeaderCheckboxFocus() {\n            this.headerCheckboxFocused = true;\n        },\n        onHeaderCheckboxBlur() {\n            this.headerCheckboxFocused = false;\n        },\n        onClick() {\n            if (!this.disabled && (!this.$refs.overlay || !this.$refs.overlay.contains(event.target))) {\n                if (this.overlayVisible)\n                    this.hide();\n                else\n                    this.show();\n\n                this.$refs.focusInput.focus();\n            }\n        },\n        onCloseClick() {\n            this.hide();\n        },\n        onKeyDown(event) {\n            switch(event.which) {\n                //down\n                case 40:\n                    if (this.visibleOptions && !this.overlayVisible && event.altKey) {\n                        this.show();\n                    }\n                break;\n\n                //space\n                case 32:\n                    if (!this.overlayVisible) {\n                        this.show();\n                        event.preventDefault();\n                    }\n                break;\n\n                //enter and escape\n                case 13:\n                case 27:\n                    if (this.overlayVisible) {\n                        this.hide();\n                        event.preventDefault();\n                    }\n                break;\n\n                //tab\n                case 9:\n                    this.hide();\n                break;\n\n                default:\n                break;\n            }\n        },\n        onOptionSelect(event, option) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            let selected = this.isSelected(option);\n            let value = null;\n\n            if (selected)\n                value = this.value.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));\n            else\n                value = [...this.value || [], this.getOptionValue(option)];\n\n            this.$emit('input', value);\n            this.$emit('change', {originalEvent: event, value: value});\n        },\n        onOptionKeyDown(event, option) {\n            let listItem = event.target;\n\n            switch(event.which) {\n                //down\n                case 40:\n                    var nextItem = this.findNextItem(listItem);\n                    if (nextItem) {\n                        nextItem.focus();\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //up\n                case 38:\n                    var prevItem = this.findPrevItem(listItem);\n                    if (prevItem) {\n                        prevItem.focus();\n                    }\n\n                    event.preventDefault();\n                break;\n\n                //enter\n                case 13:\n                    this.onOptionSelect(event, option);\n                    event.preventDefault();\n                break;\n\n                default:\n                break;\n            }\n        },\n        findNextItem(item) {\n            let nextItem = item.nextElementSibling;\n\n            if (nextItem)\n                return DomHandler.hasClass(nextItem, 'p-disabled') ? this.findNextItem(nextItem) : nextItem;\n            else\n                return null;\n        },\n        findPrevItem(item) {\n            let prevItem = item.previousElementSibling;\n\n            if (prevItem)\n                return DomHandler.hasClass(prevItem, 'p-disabled') ? this.findPrevItem(prevItem) : prevItem;\n            else\n                return null;\n        },\n        onOverlayEnter() {\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.$emit('hide');\n        },\n        alignOverlay() {\n            DomHandler.relativePosition(this.$refs.overlay, this.$refs.container);\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.isOutsideClicked(event)) {\n                        this.hide();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !(this.$refs.container.isSameNode(event.target) || this.$refs.container.contains(event.target) || (this.$refs.overlay && this.$refs.overlay.contains(event.target)));\n        },\n        getLabelByValue(val) {\n            let label = null;\n\n            if (this.options) {\n                for (let option of this.options) {\n                    let optionValue = this.getOptionValue(option);\n\n                    if(ObjectUtils.equals(optionValue, val, this.equalityKey)) {\n                        label = this.getOptionLabel(option);\n                        break;\n                    }\n                }\n            }\n\n            return label;\n        },\n        onToggleAll(event) {\n            const value = this.allSelected ? [] : this.visibleOptions  && this.visibleOptions.map(option => this.getOptionValue(option));\n\n            this.$emit('input', value);\n            this.$emit('change', {originalEvent: event, value: value});\n        }\n    },\n    computed: {\n        visibleOptions() {\n            if (this.filterValue && this.filterValue.trim().length > 0)\n                return this.options.filter(option => this.getOptionLabel(option).toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1);\n            else\n                return this.options;\n        },\n        containerClass() {\n            return [\n                'p-multiselect p-component p-unselectable-text',\n                {\n                    'p-disabled': this.disabled,\n                    'p-focus': this.focused\n                }\n            ];\n        },\n        labelClass() {\n            return [\n                'p-multiselect-label',\n                {\n                    'p-placeholder': this.label === this.placeholder,\n                    'p-multiselect-label-empty': !this.placeholder && (!this.value || this.value.length === 0)\n                }\n            ];\n        },\n        label() {\n            let label;\n\n            if (this.value && this.value.length) {\n                label = '';\n                for(let i = 0; i < this.value.length; i++) {\n                    if(i !== 0) {\n                        label += ',';\n                    }\n\n                    label += this.getLabelByValue(this.value[i]);\n                }\n            }\n            else {\n                label = this.placeholder || 'p-multiselect';\n            }\n\n            return label;\n        },\n        allSelected() {\n            if (this.filterValue && this.filterValue.trim().length > 0) {\n                let allSelected = true;\n\t\t\t\tif(this.visibleOptions.length > 0) {\n\t\t\t\t\tfor (let option of this.visibleOptions) {\n\t\t\t\t\t\tif (!this.isSelected(option)) {\n\t\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                }\n                else\n                    allSelected = false;\n                return allSelected;\n            }\n            else {\n                return this.value && this.options && (this.value.length > 0 && this.value.length === this.options.length);\n            }\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        }\n    }\n}\n</script>\n\n<style>\n.p-multiselect {\n    display: inline-block;\n    position: relative;\n    width: auto;\n    cursor: pointer;\n}\n\n.p-multiselect .p-multiselect-trigger {\n    border-right: none;\n    border-top: none;\n    border-bottom: none;\n    cursor: pointer;\n    width: 1.5em;\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 0 .25em;\n}\n\n.p-multiselect .p-multiselect-trigger .p-multiselect-trigger-icon {\n    top: 50%;\n    left: 50%;\n    margin-top: -.5em;\n    margin-left: -.5em;\n    position: absolute;\n}\n\n.p-multiselect .p-multiselect-label-container {\n    overflow: hidden;\n}\n\n.p-multiselect .p-multiselect-label  {\n    display: block;\n    padding: .25em 2em .25em .25em;\n    width: auto;\n    border: none;\n    cursor: pointer;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n.p-multiselect-label-empty {\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.p-multiselect.p-disabled .p-multiselect-trigger,\n.p-multiselect.p-disabled .p-multiselect-label {\n    cursor: auto;\n}\n\n.p-multiselect-panel {\n    padding: 0.2em;\n    position: absolute;\n    min-width: 10em;\n    z-index: 2;\n}\n\n.p-multiselect .p-multiselect-panel {\n    min-width: 100%;\n}\n\n.p-multiselect-panel .p-multiselect-items-wrapper {\n    overflow: auto;\n    position: relative;\n    padding: 0.2em 0;\n}\n\n.p-multiselect-panel .p-multiselect-list {\n    border: 0 none;\n    margin: 0;\n    list-style-type: none;\n}\n\n.p-multiselect-panel .p-multiselect-item {\n    border: 0 none;\n    cursor: pointer;\n    font-weight: normal;\n    margin: 1px 0;\n    padding: .125em .25em;\n    text-align: left;\n    white-space: nowrap;\n    display: block;\n    position: relative;\n}\n\n.p-multiselect-panel .p-multiselect-item .p-checkbox {\n    display: inline-block;\n    vertical-align: middle;\n}\n\n.p-multiselect-panel .p-multiselect-item > span {\n    display: inline-block;\n    vertical-align: middle;\n}\n\n.p-multiselect-header {\n    margin-bottom: 0.3em;\n    padding: .25em;\n    position: relative;\n    text-align: left;\n}\n\n.p-multiselect-header .p-checkbox {\n    display: inline-block;\n    vertical-align: middle;\n    cursor:pointer;\n}\n\n.p-multiselect-header .p-multiselect-filter-container {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    width: 65%;\n}\n\n.p-multiselect-header .p-multiselect-filter-container .p-multiselect-filter-icon {\n    position: absolute;\n    top: .25em;\n    left: .125em;\n}\n\n.p-multiselect-header .p-inputtext {\n    padding: .125em .125em .125em 1.25em;\n    width: 100%;\n}\n\n.p-multiselect-header .p-multiselect-close {\n    position: absolute;\n    right: .375em;\n    top: .375em;\n    display: block;\n    border: 0 none;\n}\n\n.p-multiselect-header a.p-multiselect-all,\n.p-multiselect-header a.p-multiselect-none {\n    float:left;\n    margin-right: 10px;\n    display: block;\n}\n\n.p-multiselect-header .p-multiselect-close.p-state-hover {\n    padding:0px;\n}\n\n.p-fluid .p-multiselect {\n    width: 100%;\n    box-sizing: border-box;\n}\n\n</style>"]}]}