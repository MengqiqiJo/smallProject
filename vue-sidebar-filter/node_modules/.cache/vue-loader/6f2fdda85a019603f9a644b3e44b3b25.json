{"remainingRequest":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/src/components/FormTemplate.vue?vue&type=style&index=0&id=201dee8e&scoped=true&lang=css&","dependencies":[{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/src/components/FormTemplate.vue","mtime":1582437738724},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/smallProject/vue-sidebar-filter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mb3JtLWJvZHktd3JhcHBlciB7CiAgd2lkdGg6NTAlOwp9CmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["FormTemplate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormTemplate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"form-body-wrapper\">\n\n    <div v-for=\"eachBlockData in sampleSiderJson.siderData\" v-bind:key=\"eachBlockData.fieldId\">\n\n      <div v-if=\"eachBlockData.displayType=='horizontalLine'\">\n        <hr>\n      </div>\n\n      <div v-if=\"eachBlockData.displayType=='generalCheckbox'\">\n        <div>\n          <label v-for=\"item in eachBlockData.options\" v-bind:key=\"item.value\">\n            <input type=\"checkbox\" v-model=\"totalResult[eachBlockData.fieldId]\" v-bind:value=\"item.value\"> {{ item.label }}\n          </label>\n        </div>\n        <span>Selected: {{ totalResult }}</span>\n      </div>\n\n      <div v-if=\"eachBlockData.displayType=='multiselect'\">\n        <div v-if=\"eachBlockData.isChild\">\n          <span>{{eachBlockData.fieldLabel}}</span>\n          <MultiSelect v-model=\"totalResult[eachBlockData.fieldId]\" optionValue=\"value\" :options=\"getDropDownOption(totalResult[eachBlockData.parentId], eachBlockData)\" :filter=\"true\" optionLabel=\"value\" placeholder=\"Select\" />\n          <span>Selected: {{ totalResult }}</span>\n        </div>\n\n      </div>\n\n    </div>\n\n    <div>\n      <input type=\"submit\" value=\"Submit\" v-on:click=\"submit\" />\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport sampleJson from '../assets/sampleSiderFilter.json'\nimport MultiSelect from 'primevue/multiselect';\n\nexport default {\n  name: 'FormTemplate',\n  components: {\n    MultiSelect,\n  },\n  data: () => ({\n    sampleSiderJson: sampleJson,\n    totalResult: sampleJson.result,\n  }),\n  methods: {\n    submit: function() {\n      console.log(this.dropDownSelected);\n      console.log(this.sampleSiderJson.siderData);\n    },\n\n    getDropDownOption: function(parentResult, childBlockData) {\n      var temporaryData = [];\n      childBlockData.options.forEach(eachChildBlockValue => {\n        eachChildBlockValue.enable.forEach(eachChildRenderValue => {\n          if (parentResult.includes(eachChildRenderValue)) {\n              temporaryData.push(eachChildBlockValue);\n          }\n        });\n      });\n\n      const filteredArr = temporaryData.reduce((acc, current) => {\n        const x = acc.find(item => item.value === current.value);\n        if (!x) {\n          return acc.concat([current]);\n        } else {\n          return acc;\n        }\n      }, []);\n\n\n      childBlockData.options.forEach(eachChildBlockValue => {\n\n        var tempEnable = eachChildBlockValue.enable;\n\n        const foundIfParentChecked = parentResult.some(r=> tempEnable.indexOf(r) >= 0);\n\n        if (!foundIfParentChecked) {\n\n          var currentValueIndex = this.totalResult[childBlockData.fieldId].indexOf(eachChildBlockValue.value);\n          if (currentValueIndex > -1) {\n            this.totalResult[childBlockData.fieldId].splice(currentValueIndex, 1);\n          }\n        }\n\n      });\n\n      return filteredArr;\n    }\n\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.form-body-wrapper {\n  width:50%;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}